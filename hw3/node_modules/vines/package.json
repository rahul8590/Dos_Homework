{
  "name": "vines",
  "version": "0.0.4",
  "description": "an implementation of the gossip protocol with quorum-based voting machinery",
  "main": "index.js",
  "scripts": {
    "test": "./test/test"
  },
  "repository": {
    "type": "git",
    "url": "github.com/hij1nx/vines"
  },
  "keywords": [
    "gossip",
    "git"
  ],
  "dependencies": {
    "node-uuid": "1.3.x"
  },
  "devDependencies": {
    "tap": "*"
  },
  "author": {
    "name": "Paolo Fragomeni"
  },
  "license": "MIT",
  "readme": "![Node Vines](https://raw.github.com/hij1nx/vines/master/node-vines.png)\n\n## Motivation\n\nA distributed system has many discrete processes that run on a multitude of\narbitrary devices and networks yet to the user it appears to be a single\ncoherent program. Distributed systems can help to provide availability and \nfault tolerance.\n\n## Synopsis\n\nFault-tolerance and strong consistency are not exactly compatable. Vines \nattempts to facilitate data replication and coordinated decision making \nthrough a combination of [eventual consistency][0] and [quorum-based concensus][1].\n\nVines is targeted toward applications that require intelegence distribution\nsuch as _application monitoring_.\n\n## Features\n\n - Automatic reconnect\n - Quorum based consensus protocol\n - Gossip based data replication\n\n## Examples\n\n### Data replication\n\nA computer at `192.168.0.2` can generate some information.\n\n```js\n  var vine = Vine()\n\n  vine\n    .listen(8000)\n    .gossip('foo', 'hello, world')\n```\n\nA computer at `192.168.0.3` can discover that information regardless of\nwhen then peers were connected or when the data was entered.\n\n```js\n  var vine = Vine()\n\n  vine\n    .listen(8000)\n    .join(8000, '192.168.0.2')\n    .on('gossip', 'foo', function(value) {\n      console.log(value);\n    })\n```\n\n### Concensus\n\nA computer at `192.168.0.2` can call an election and cast a vote.\n\n```js\n\n  var electionCriteria = {\n    topic: 'email',\n    expire: String(new Date(now.setMinutes(now.getMinutes() + 5))),\n    min: 2,\n    total: 2\n  }\n\n  var vine = Vine()\n\n  vine\n    .listen(8000)\n    .on('quorum', onQuorum)\n    .on('expire', onExpire)\n    .election(electionCriteria)\n    .vote('email', true)\n```\n\nA computer at `192.168.0.3` can also call an election however only one\nof the peers will be able to execute the callback for the `quorum` event.\n\n```js\n  var vine = Vine()\n\n  vine\n    .listen(8000)\n    .join(8000, '192.168.0.2')\n    .on('quorum', onQuorum)\n    .on('expire', onExpire)\n    .election(electionCriteria)\n    .vote('email', true)\n```\n\n[0]:http://www.oracle.com/technetwork/products/nosqldb/documentation/consistency-explained-1659908.pdf\n[1]:http://pbs.cs.berkeley.edu/pbs-vldb2012.pdf\n[2]:http://www.cs.utexas.edu/~lorenzo/papers/p14-alvisi.pdf\n[3]:http://citeseerx.ist.psu.edu/viewdoc/download;jsessionid=5A7801DAF5FBEDD7D15599DEA8AA2677?doi=10.1.1.34.9524&rep=rep1&type=pdf\n[4]:http://net.pku.edu.cn/~course/cs501/2011/resource/2006-Book-distributed%20systems%20principles%20and%20paradigms%202nd%20edition.pdf\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/hij1nx/vines/issues"
  },
  "_id": "vines@0.0.4",
  "dist": {
    "shasum": "4f18c21031d2aaa67ac3988cb9f93faf4aa1f4d7"
  },
  "_from": "vines@",
  "_resolved": "https://registry.npmjs.org/vines/-/vines-0.0.4.tgz"
}
