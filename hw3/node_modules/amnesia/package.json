{
  "name": "amnesia",
  "version": "0.1.1",
  "description": "Easy memory sharing (javascript variable/json) between different machines and/or process for Node.js",
  "main": "amnesia.js",
  "scripts": {
    "test": "node test.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/fermads/Amnesia.git"
  },
  "keywords": [
    "memory",
    "sharing"
  ],
  "author": {
    "name": "Fernando MAdS",
    "email": "fermads@gmail.com"
  },
  "license": "MIT",
  "readme": "# Amnesia\r\n\r\nEasy memory (javascript object/variable) sharing between different machines and/or process for Node.js\r\n\r\n* Extremely simple and small. A single variable is shared between machines and processes\r\n* When this variable value is changed, it gets updated on all other machines\r\n* Supports javascript Number, String and JSON\r\n* No other modules dependency\r\n\r\nDisclaimer:\r\n\r\n* No guarantees of concurrent writes, last one stands\r\n* No persistence. On restarts, it'll ask for a SYNC from all others peers and get the most updated value\r\n* If you're on only one machine and using node.js cluster, you'll probably be better with message passing\r\n* For a serious use, you'll probably need something else like Redis or Memcache\r\n\r\n\r\n## Install\r\n\r\n```\r\nnpm install amnesia\r\n```\r\n\r\n## Configuration\r\n\r\nEdit conf.json and add your ips/ports. If you'll share on the same machine with different processes, duplicate the ip with different ports\r\n\r\nAll machines should have the same conf.json with the current machine's ip and its peers\r\n\r\n\r\n```js\r\n[\r\n\t{\r\n\t\t\"host\" : \"172.22.18.15\",\r\n\t\t\"port\" : 7777\r\n\t},\r\n\t{\r\n\t\t\"host\" : \"172.22.18.15\",\r\n\t\t\"port\" : 8888\r\n\t},\r\n\t{\r\n\t\t\"host\" : \"172.22.18.16\",\r\n\t\t\"port\" : 8888\r\n\t}\r\n]\r\n```\r\n\r\n## Usage\r\n\r\nUse like any javascript object. The value is on the \"data\" property\r\n```js\r\nmem = require ('./amnesia');\r\nmem.data = 1 // <-- all \"mem.data\" variable in all machines will have their value set to 1\r\n\r\n```\r\n\r\nNeed to know when value change?\r\n```js\r\nmem.on('change', function(oldvalue, newvalue, remoteUpdate) {\r\n\tconsole.log('Value changed from '+ oldvalue +' to '+ newvalue +' '+ (remoteUpdate ? 'remotely' : 'locally') );\r\n\t// remoteUpdate tells you if the new value came from another machine (set remotely)\r\n})\r\n```\r\n\r\nNeed to see whats happening?\r\n```js\r\nmem.on('log', function(msg) {\r\n\tconsole.log(msg);\r\n})\r\n```\r\n\r\nWhen it was updated?\r\n```js\r\nconsole.log(mem.updated)\r\n```\r\n\r\n## Interactive example\r\nOn machine 1:\r\n```js\r\nnode\r\n> mem = require('./amnesia')\r\n{ updated: 0, remote: null }\r\n> mem.data = { jsontest : 123 }\r\n{ jsontest: 123 }\r\n>\r\n```\r\n\r\nThen, on machine 2:\r\n```js\r\nnode\r\n> mem = require('./amnesia') // <-- a SYNC happens here\r\n{ updated: 0, remote: null }\r\n> mem.data\r\n{ jsontest: 123 } // <-- then value for mem.data is already set\r\n>\r\n```\r\n\r\n## License\r\n\r\nLicensed under the MIT license.",
  "readmeFilename": "readme.md",
  "bugs": {
    "url": "https://github.com/fermads/Amnesia/issues"
  },
  "_id": "amnesia@0.1.1",
  "dist": {
    "shasum": "a4619af9ef86981247b1fd7cdce1ef9d4688ca5e"
  },
  "_from": "amnesia@",
  "_resolved": "https://registry.npmjs.org/amnesia/-/amnesia-0.1.1.tgz"
}
